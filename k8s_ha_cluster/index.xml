<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>K8s-HA-Cluster on Gerundium</title>
    <link>https://gerundium.github.io/k8s_ha_cluster/</link>
    <description>Recent content in K8s-HA-Cluster on Gerundium</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language><atom:link href="https://gerundium.github.io/k8s_ha_cluster/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>3.1 Overview</title>
      <link>https://gerundium.github.io/k8s_ha_cluster/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://gerundium.github.io/k8s_ha_cluster/overview/</guid>
      <description>State/Version: 20240225
3.1 Overview 3.1.1 A few words before we start 🚀 Setting up a home lab takes time. The construction or renovation of a house is comparable in scope and complexity. In the end, you not only know where the pipes run, but also what you can do better when building the next one.
In addition to expertise, two character traits in particular are required to master a project like this.</description>
    </item>
    
    <item>
      <title>3.2 Provisioning the k8s nodes</title>
      <link>https://gerundium.github.io/k8s_ha_cluster/provisioning/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://gerundium.github.io/k8s_ha_cluster/provisioning/</guid>
      <description>State/Version: 20241018
3.2 Provisioning the k8s nodes 🚚 3.2.1 Development cluster 🚧  The Development Cluster is privisioned with 🏷️ansible. Running as bare-metal variant of 🏷️talos on the 🏷️Virtualbox platform.  The code for the development cluster is documented here: 🌐 homelab repository on github.
3.2.2 Staging cluster K1 The Staging Cluster runs as a set of virtual machines on a 🏷️Proxmox host. The Terraform source code is also stored currently in a privat github repository and will be published soon in this 🌐 homelab repository on github</description>
    </item>
    
    <item>
      <title>3.3 Deploy Kubernetes</title>
      <link>https://gerundium.github.io/k8s_ha_cluster/deployment/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://gerundium.github.io/k8s_ha_cluster/deployment/</guid>
      <description>State/Version: 20240225
3.3 Deploy Kubernetes 🚚 Once the stage is prepared Kubernetes can be deployed.
3.3.1 Development cluster 🚧 The first iteartion of the Kubernetes homelab was provisioned as described on rechno-tims blog.
 🌐 Automated build of HA k3s Cluster with kube-vip and MetalLB  Currently I replaced 🏷️k3s with 🏷️talos because it fits better into my automated provisioning and configuration workflow.
The code is documented here: 🌐 homelab repository on github.</description>
    </item>
    
    <item>
      <title>3.4 GitOps: Install and configure FluxCD</title>
      <link>https://gerundium.github.io/k8s_ha_cluster/gitops/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://gerundium.github.io/k8s_ha_cluster/gitops/</guid>
      <description>State/Version: 20240225
3.4 GitOps: Install and configure 3.4.1 GitOps: Install and configure FluxCD 🏗️ Installing and Configuring 🏷️FluxCD is the easy part ( if you do not mess up your dns setup :] ).
This will install Flux into the cluster and connect it to the specified git repository. You have to repeat it for every cluster you want to manage.
export GITHUB_TOKEN=&amp;lt;PersonalAccessToken&amp;gt; export GITHUB_USER=gerundium flux bootstrap github \  --token-auth \  --owner=gerundium \  --repository=flux-k2 \  --path=clusters/&amp;lt;STAGE&amp;gt; \  --personal \  --branch main At this point your fluxcd is authorized and configured to apply changes (pull-based), that are stored in your 🏷️github-repository, to the Kubernetes cluster.</description>
    </item>
    
  </channel>
</rss>
