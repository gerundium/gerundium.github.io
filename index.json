[
{
	"uri": "https://gerundium.github.io/introduction/",
	"title": "Introduction",
	"tags": ["Introduction"],
	"description": "",
	"content": "Topics  Documentation  About the author About this blog    "
},
{
	"uri": "https://gerundium.github.io/",
	"title": "Welcome",
	"tags": ["home"],
	"description": "",
	"content": "Welcome friend Project status  State/Version: Draft  Focus This documentation is about building your own Homelab.\n Type of audience: system administrators (#linux #devops) Type of documentation: technical documentation  High level view  Introduction  Documentation  Author Hugo Github Pages     Homelab Setup  Network Hardware Kubernetes Ansible GitOps    "
},
{
	"uri": "https://gerundium.github.io/homelab-setup/",
	"title": "Homelab Setup",
	"tags": ["Homelab Setup"],
	"description": "",
	"content": "Topics Homelab Setup  Network Hardware Kubernetes Ansible GitOps    "
},
{
	"uri": "https://gerundium.github.io/tags/home/",
	"title": "home",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://gerundium.github.io/tags/homelab-setup/",
	"title": "Homelab Setup",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://gerundium.github.io/tags/introduction/",
	"title": "Introduction",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://gerundium.github.io/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://gerundium.github.io/introduction/documentation/",
	"title": "1.1 Documentation",
	"tags": ["home", "documentation"],
	"description": "",
	"content": "State/Version: Draft\nTable of contents  Table of contents  1.1 About the author  1.2 About this blog   1.2.1 CI / CD Pipeline   1.2.1.1 Sequencediagram   1.2.2 Github setup 1.2.3 Step-by-step deployment      1.1 About the author   Senor Linux system administrator and DevOps enthusiast Daily business: #kubernetes #openshift #rancher #gitops #ansible Current place of residence: Berlin (Germany)  1.2 About this blog   This blog was built with hugo. The build process (CI) is triggered being through generating static content by github actions. The deployment process (CD) is also done through github actions by deploying static content to github pages.  1.2.1 CI / CD Pipeline   The whole pipeline is fully automated Prerequisites two github repositories and one local working copy flowchart LR 0 --|Push| A A --|Push| B   0) Laptop - private, local clone of blog-source@github A) blog-source@github - private, contains full hugo code B) blog-rendered@github - public, contains static (rendered) hugo html code    1.2.1.1 Sequencediagram sequenceDiagram participant A as Laptop@local participant B as blog-source@github participant C as blog-rendered@github A-A: 1. Create content locally A-B: 2. Push code to blog-source@github Note over A, B: Commit action (push) will trigger \"Github Actions\" B-C: 3. Push static html from blog-source@github to blog-rendered@github (Github pages) via a \"Github Actions\"  1.2.2 Github setup    Alias Real world brief description     blog-source@github gerundium/gerundium.github.io-source This repository contains the full monty. Use it to create / render new content for your blog.   blog-rendered@github gerundium/gerundium.github.io This repository is linked as git submodule inside blog-source@github. It contains the rendered / static html files    # -- # Folder tree # -- ./blog-source@github ├── archetypes ├── content ├── data ├── layouts ├── public # blog-rendered@github (Git submodule) | ├── authors | ├── basics | ├── categories | ├── css | ├── fonts | ├── images | ├── js | ├── logo | ├── mermaid | ├── posts | ├── series | ├── tags | └── webfonts ├── resources ├── static └── themes 1.2.3 Step-by-step deployment  Apply changes to blog-source@github/content Build static html # Execute command on the laptop hugo  Commit changes in public submodule and push commit to blog-rendered@github # Git commit and push git add -A git commit -m \u0026#34;add: \u0026lt;specify cxhange\u0026gt;\u0026#34; git push  Wait a minute while build and deployment piplines run. Check if changes were deployed to github pages. gerundium.github.io  "
},
{
	"uri": "https://gerundium.github.io/homelab-setup/network/",
	"title": "2.1 Network",
	"tags": ["home", "homelab-setup"],
	"description": "",
	"content": "State/Version: Draft\n 2.1 High level view   2.1 High level view   Hardware, that belongs to the \u0026ldquo;Management\u0026rdquo; network, knows routes into the other networks and provide internet connectivity. Hardware grouped in IoT (Internet of Things/Trash) segment is considered as untrusted and therefore cannot connect to other network members. It still can be controled via internet.  "
},
{
	"uri": "https://gerundium.github.io/tags/documentation/",
	"title": "documentation",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://gerundium.github.io/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
}]